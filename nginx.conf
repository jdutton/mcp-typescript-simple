events {
    worker_connections 1024;
}

http {
    # Upstream servers - multiple MCP instances
    upstream mcp_backend {
        # Round-robin load balancing (default)
        server mcp-server-1:3000;
        server mcp-server-2:3000;
        server mcp-server-3:3000;
    }

    server {
        listen 8080;
        server_name localhost;

        # Enable access logs to see which instance handles each request
        access_log /var/log/nginx/access.log combined;
        error_log /var/log/nginx/error.log warn;

        location / {
            proxy_pass http://mcp_backend;

            # Preserve original request headers with port
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Critical: Preserve MCP session headers
            proxy_pass_request_headers on;

            # WebSocket support (for SSE if needed)
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Timeouts
            # Note: Current timeout values (60s) are optimized for standard MCP protocol requests.
            # Long-lived connections (SSE/WebSocket) are not currently supported and will timeout.
            # For SSE support, increase proxy_read_timeout or set to 0 (no timeout).
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Health check endpoint
        location /health {
            proxy_pass http://mcp_backend/health;
            proxy_set_header Host $http_host;
        }
    }
}
