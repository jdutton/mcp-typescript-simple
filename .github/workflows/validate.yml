# THIS FILE IS AUTO-GENERATED by tools/generate-validate-workflow.ts
# DO NOT EDIT MANUALLY - Edit tools/validation-config.ts instead
# Regenerate with: npm run validate:generate-workflow
#
# Source of truth: tools/validation-config.ts
# Generated: 2025-10-12T00:34:10.223Z
name: Validation Pipeline
"on":
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
jobs:
  typecheck:
    name: TypeScript type checking
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
      - run: npm ci
      - run: npm run typecheck
  lint:
    name: ESLint code checking
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
      - run: npm ci
      - run: npm run lint
  openapi:
    name: OpenAPI validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
      - run: npm ci
      - run: npm run test:openapi
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
      - run: npm ci
      - run: npm run build
  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    needs:
      - typecheck
      - lint
      - openapi
      - build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
      - run: npm ci
      - run: npm run test:unit
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
  integration-tests:
    name: Integration tests
    runs-on: ubuntu-latest
    needs:
      - typecheck
      - lint
      - openapi
      - build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
      - run: npm ci
      - run: npm run test:integration
  stdio-tests:
    name: STDIO system tests
    runs-on: ubuntu-latest
    needs:
      - typecheck
      - lint
      - openapi
      - build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
      - run: npm ci
      - run: npm run test:system:stdio
  http-tests:
    name: HTTP system tests
    runs-on: ubuntu-latest
    needs:
      - typecheck
      - lint
      - openapi
      - build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
      - run: npm ci
      - run: npm run test:system:ci
  headless-tests:
    name: Headless browser tests
    runs-on: ubuntu-latest
    needs:
      - typecheck
      - lint
      - openapi
      - build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
      - run: npm ci
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      - run: npm run test:system:headless
  all-validation-passed:
    name: All Validation Passed
    runs-on: ubuntu-latest
    needs:
      - typecheck
      - lint
      - openapi
      - build
      - unit-tests
      - integration-tests
      - stdio-tests
      - http-tests
      - headless-tests
    if: always()
    steps:
      - name: Check all validation jobs
        run: |-
          if [ "${{ needs.typecheck.result }}" != "success" ] || \
                       [ "${{ needs.lint.result }}" != "success" ] || \
                       [ "${{ needs.openapi.result }}" != "success" ] || \
                       [ "${{ needs.build.result }}" != "success" ] || \
                       [ "${{ needs.unit_tests.result }}" != "success" ] || \
                       [ "${{ needs.integration_tests.result }}" != "success" ] || \
                       [ "${{ needs.stdio_tests.result }}" != "success" ] || \
                       [ "${{ needs.http_tests.result }}" != "success" ] || \
                       [ "${{ needs.headless_tests.result }}" != "success" ]; then
                      echo "❌ Some validation checks failed"
                      exit 1
                    fi
                    echo "✅ All validation checks passed!"
