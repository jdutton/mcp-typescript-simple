name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run regression tests
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
      run: npm run test:ci

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-node-${{ matrix.node-version }}
        path: |
          build/
          *.log
        retention-days: 7

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: docker build -t mcp-typescript-simple .

    - name: Test Docker image
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
      run: |
        # Basic smoke test - container should start and exit gracefully
        timeout 10s docker run --rm \
          -e ANTHROPIC_API_KEY="$ANTHROPIC_API_KEY" \
          -e OPENAI_API_KEY="$OPENAI_API_KEY" \
          -e GOOGLE_API_KEY="$GOOGLE_API_KEY" \
          mcp-typescript-simple || [ $? -eq 124 ]

  # Required status check - all jobs must pass
  all-checks:
    name: All Checks Passed
    runs-on: ubuntu-latest
    needs: [test, docker]
    if: always()

    steps:
    - name: Check all jobs status
      run: |
        if [ "${{ needs.test.result }}" != "success" ] || [ "${{ needs.docker.result }}" != "success" ]; then
          echo "❌ Some checks failed:"
          echo "Test result: ${{ needs.test.result }}"
          echo "Docker result: ${{ needs.docker.result }}"
          exit 1
        fi
        echo "✅ All checks passed successfully!"

  deploy:
    name: Deploy Check
    runs-on: ubuntu-latest
    needs: [all-checks]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Deployment ready
      run: |
        echo "✅ All tests passed! Ready for deployment."
        echo "Add your deployment steps here (e.g., publish to registry, deploy to cloud, etc.)"