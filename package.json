{
  "name": "mcp-typescript-simple",
  "version": "1.0.0",
  "description": "A framework for building TypeScript MCP servers",
  "main": "build/index.js",
  "type": "module",
  "private": true,
  "workspaces": [
    "packages/*"
  ],
  "scripts": {
    "build": "tsc",
    "build:vercel": "tsc && cp -r api build/",
    "dev:stdio": "NODE_ENV=development MCP_DEV_SKIP_AUTH=true tsx --env-file-if-exists=.env.local --import ./src/observability/register.ts src/index.ts",
    "dev:http": "NODE_ENV=development MCP_MODE=streamable_http MCP_DEV_SKIP_AUTH=true tsx --import ./src/observability/register.ts src/index.ts",
    "dev:http:ci": "NODE_ENV=development MCP_MODE=streamable_http MCP_DEV_SKIP_AUTH=true HTTP_PORT=3001 tsx --import ./src/observability/register.ts src/index.ts",
    "dev:oauth": "NODE_ENV=development MCP_MODE=streamable_http tsx --import ./src/observability/register.ts --env-file=.env.oauth src/index.ts",
    "dev:vercel": "vercel dev",
    "start": "MCP_MODE=streamable_http node --import ./build/observability/register.js --env-file-if-exists=.env build/index.js",
    "run:docker:build": "docker build -t mcp-typescript-simple:latest .",
    "run:docker": "docker run --rm -p 3000:3000 --env-file .env.oauth mcp-typescript-simple:latest",
    "run:docker:redis:start": "docker run -d --name mcp-redis -p 6379:6379 redis:7-alpine",
    "run:docker:redis:stop": "docker stop mcp-redis && docker rm mcp-redis",
    "run:docker:with-redis": "npm run run:docker:redis:start && sleep 2 && docker run --rm -p 3000:3000 --env-file .env.oauth -e REDIS_URL=redis://host.docker.internal:6379 --add-host host.docker.internal:host-gateway mcp-typescript-simple:latest",
    "deploy:vercel": "vercel --prod",
    "test": "npm run test:unit",
    "test:unit": "vitest run --coverage",
    "test:integration": "npx tsx test/integration/deployment-validation.test.ts",
    "test:ci": "npm run test:integration",
    "test:mcp": "npx tsx tools/manual/test-mcp.ts",
    "test:interactive": "npx tsx tools/interactive-client.ts",
    "test:dual-mode": "npx tsx examples/test-dual-mode.ts",
    "test:vercel-config": "npx tsx test/integration/vercel-config-test.ts",
    "test:transport": "npx tsx test/integration/transport-test.ts",
    "test:branch-sync": "vitest run test/integration/branch-sync-fast.test.ts",
    "test:system": "vitest run --config vitest.system.config.ts",
    "test:system:express": "TEST_ENV=express npm run test:system",
    "test:system:ci": "TEST_ENV=express:ci npm run test:system",
    "test:system:stdio": "TEST_ENV=stdio npm run test:system",
    "test:system:verbose": "SYSTEM_TEST_VERBOSE=true npm run test:system:ci",
    "test:system:vercel:local": "TEST_ENV=vercel:local npm run test:system",
    "test:system:vercel:preview": "TEST_ENV=vercel:preview npm run test:system",
    "test:models": "vitest run --config vitest.system.config.ts test/system/models-validation.system.test.ts",
    "test:system:vercel:production": "TEST_ENV=vercel:production npm run test:system",
    "test:system:docker": "TEST_ENV=docker npm run test:system",
    "test:system:headless": "playwright test",
    "test:system:headless:ui": "playwright test --ui",
    "test:system:headless:debug": "PWDEBUG=1 playwright test",
    "test:all": "npm run test:ci",
    "test:openapi:compliance": "vitest run test/integration/openapi-compliance.test.ts",
    "test:openapi:coverage": "vitest run test/integration/route-coverage.test.ts",
    "test:openapi": "npm run docs:validate && npm run test:openapi:compliance && npm run test:openapi:coverage",
    "lint": "eslint src/**/*.ts test/**/*.ts tools/**/*.ts",
    "typecheck": "tsc --noEmit",
    "dev:clean": "npx tsx tools/clean-dev-data.ts",
    "dev:clean:sessions": "npx tsx tools/clean-dev-data.ts sessions",
    "dev:clean:tokens": "npx tsx tools/clean-dev-data.ts tokens",
    "dev:clean:oauth": "npx tsx tools/clean-dev-data.ts clients",
    "sync-check": "vibe-validate sync-check",
    "pre-commit": "vibe-validate pre-commit",
    "post-pr-merge-cleanup": "vibe-validate cleanup",
    "otel:start": "docker run -d --name mcp-otel-lgtm -p 3200:3000 -p 4317:4317 -p 4318:4318 --restart unless-stopped grafana/otel-lgtm:latest",
    "otel:stop": "docker stop mcp-otel-lgtm && docker rm mcp-otel-lgtm",
    "otel:logs": "docker logs -f mcp-otel-lgtm",
    "otel:ui": "open http://localhost:3200 || echo 'Open http://localhost:3200 in your browser'",
    "otel:restart": "npm run otel:stop && npm run otel:start",
    "otel:validate": "echo '✓ Testing Grafana health...' && curl -sf http://localhost:3200/api/health > /dev/null && echo '✓ Grafana is healthy' && echo '✓ Testing OTLP traces endpoint...' && curl -sf -w '%{http_code}' -X POST http://localhost:4318/v1/traces -H 'Content-Type: application/x-protobuf' --data-binary @/dev/null -o /dev/null | grep -qE '^(200|400|415)$' && echo '✓ OTLP endpoint is accepting requests' && echo '✓ All observability services are healthy'",
    "dev:with-otel": "npm run otel:start && sleep 10 && npm run dev:http",
    "docs:build": "redocly build-docs openapi.yaml -o docs/api-reference.html",
    "docs:validate": "redocly lint openapi.yaml",
    "docs:preview": "redocly preview-docs openapi.yaml",
    "docs:bundle": "redocly bundle openapi.yaml -o public/openapi.json",
    "validate": "vibe-validate validate",
    "validate:generate-workflow": "vibe-validate generate-workflow",
    "validate:check-workflow-sync": "vibe-validate generate-workflow --check",
    "docker:build": "docker build -t mcp-typescript-simple .",
    "docker:run": "docker run --rm -it mcp-typescript-simple",
    "docker:dev": "npm run docker:build && npm run docker:run",
    "postinstall": "sh tools/build-workspaces.sh",
    "prepare": "husky || true"
  },
  "keywords": [
    "mcp",
    "typescript",
    "server"
  ],
  "author": "Jeff Dutton",
  "license": "MIT",
  "engines": {
    "node": ">=22.0.0",
    "npm": ">=10.0.0"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.63.0",
    "@google/generative-ai": "^0.24.1",
    "@mcp-typescript-simple/config": "*",
    "@mcp-typescript-simple/persistence": "*",
    "@mcp-typescript-simple/example-tools-basic": "*",
    "@mcp-typescript-simple/example-tools-llm": "*",
    "@mcp-typescript-simple/server": "*",
    "@mcp-typescript-simple/tools": "*",
    "@mcp-typescript-simple/tools-llm": "*",
    "@modelcontextprotocol/sdk": "^1.18.0",
    "@opentelemetry/api": "^1.9.0",
    "@opentelemetry/auto-instrumentations-node": "^0.64.1",
    "@opentelemetry/exporter-logs-otlp-http": "^0.205.0",
    "@opentelemetry/instrumentation": "^0.205.0",
    "@opentelemetry/resources": "^2.1.0",
    "@opentelemetry/sdk-node": "^0.205.0",
    "@opentelemetry/semantic-conventions": "^1.37.0",
    "@types/cors": "^2.8.19",
    "@types/express": "^5.0.3",
    "@vercel/otel": "^2.0.0",
    "ajv": "^8.17.1",
    "ajv-formats": "^3.0.1",
    "axios": "^1.7.7",
    "cors": "^2.8.5",
    "express": "^5.1.0",
    "express-openapi-validator": "^5.6.0",
    "google-auth-library": "^10.3.0",
    "helmet": "^8.1.0",
    "ioredis": "^5.8.0",
    "openai": "^5.21.0",
    "pino": "^9.12.0",
    "pino-opentelemetry-transport": "^1.1.0",
    "pino-pretty": "^13.1.1",
    "swagger-ui-express": "^5.0.1",
    "yaml": "^2.8.1",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@modelcontextprotocol/inspector": "^0.17.0",
    "@playwright/test": "^1.56.0",
    "@redocly/cli": "^2.2.2",
    "@types/nock": "^10.0.3",
    "@types/node": "^24.5.2",
    "@types/supertest": "^6.0.3",
    "@types/swagger-ui-express": "^4.1.8",
    "@typescript-eslint/eslint-plugin": "^8.44.0",
    "@typescript-eslint/parser": "^8.44.0",
    "@vercel/node": "^5.3.23",
    "@vibe-validate/cli": "^0.10.0",
    "@vibe-validate/config": "^0.10.0",
    "@vibe-validate/core": "^0.10.0",
    "@vibe-validate/formatters": "^0.10.0",
    "@vibe-validate/git": "^0.10.0",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "eslint": "^9.35.0",
    "husky": "^9.1.7",
    "ioredis-mock": "^8.13.0",
    "nock": "^14.0.10",
    "oauth2-mock-server": "^8.1.0",
    "playwright": "^1.56.0",
    "supertest": "^7.1.4",
    "tsx": "^4.20.5",
    "typescript": "^5.9.2",
    "vercel": "^48.1.0",
    "vitest": "^3.2.4"
  }
}
