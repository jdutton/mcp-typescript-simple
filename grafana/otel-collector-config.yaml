# OpenTelemetry Collector Configuration
# Receives OTLP logs/traces/metrics and forwards to Loki, Tempo, Prometheus

extensions:
  health_check:
    endpoint: 0.0.0.0:13133

receivers:
  otlp:
    protocols:
      http:
        endpoint: 0.0.0.0:4318
      grpc:
        endpoint: 0.0.0.0:4317

processors:
  batch:
    timeout: 10s
    send_batch_size: 1024
    send_batch_max_size: 2048

  # Resource detection for cloud deployments
  resourcedetection:
    detectors: [env, system, docker]
    timeout: 5s

  # Add resource attributes
  resource:
    attributes:
      - key: deployment.environment
        value: ${env:DEPLOYMENT_ENVIRONMENT}
        action: upsert

exporters:
  # OTLP HTTP exporter for logs to Loki
  otlphttp/loki:
    endpoint: http://loki:3100/otlp
    tls:
      insecure: true

  # Prometheus exporter for metrics
  prometheus:
    endpoint: 0.0.0.0:8889
    namespace: mcp

  # Debug exporter (optional - can be removed in production)
  debug:
    verbosity: detailed
    sampling_initial: 5
    sampling_thereafter: 200

service:
  extensions: [health_check]

  pipelines:
    logs:
      receivers: [otlp]
      processors: [batch, resourcedetection, resource]
      exporters: [otlphttp/loki, debug]

    traces:
      receivers: [otlp]
      processors: [batch, resourcedetection, resource]
      exporters: [debug]

    metrics:
      receivers: [otlp]
      processors: [batch, resourcedetection, resource]
      exporters: [prometheus, debug]

  telemetry:
    logs:
      level: info
